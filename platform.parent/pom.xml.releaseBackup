<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.antheminc.oss</groupId>
		<artifactId>nimbus.core.dependencies</artifactId>
		<version>1.0.0.M9-SNAPSHOT</version>
		<relativePath>../platform.dependencies</relativePath>
	</parent>
	<artifactId>nimbus.core.parent</artifactId>
	<packaging>pom</packaging>
	<name>nimbus-core-parent</name>
	<!--
	<modules>
		<module>../platform.spec.model</module>
		<module>../platform.spec.model.test</module>
		<module>../platform.core.process</module>
	</modules>
-->
	<organization>
		<name>Anthem Inc.</name>
		<url>https://www.oss.antheminc.com</url>
	</organization>

	<!-- @TODO - Change exact path below -->
	<scm>
		<url>http://github.com/anthem-projects/nimbus-oss</url>
		<connection>scm:git:git://github.com/openanthem/nimbus-core.git</connection>
	  <tag>nimbus.core.parent-1.0.0</tag>
  </scm>
	<issueManagement>
		<system>Github</system>
		<url>https://github.com/anthemprojects/nimbus-oss/issues</url>
	</issueManagement>

	<properties>
		<sonar.projectName>NIM-Parent</sonar.projectName>
		<!-- <sonar.jacoco.reportPath>target/jacoco.exec</sonar.jacoco.reportPath> -->
		<docker.image.prefix>nimbus</docker.image.prefix>
		<docker.plugin.version>0.3.258</docker.plugin.version>
		<spring.boot.maven.version>1.4.0.RELEASE</spring.boot.maven.version>
		<ecj.version>4.5.1</ecj.version>
		<validation-api.version>1.1.0.Final</validation-api.version>
		<byte-buddy.version>1.4.17</byte-buddy.version>
		<netty.version>4.1.2.Final</netty.version>
		<jjwt.version>0.6.0</jjwt.version>
		<sitemesh.version>2.4.2</sitemesh.version>
		<embed-mongo.version>2.0.0</embed-mongo.version>
		<embed-redis.version>0.4</embed-redis.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
	</properties>

	<!-- Third party optional dependency management -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.eclipse.jdt.core.compiler</groupId>
				<artifactId>ecj</artifactId>
				<version>${ecj.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>net.bytebuddy</groupId>
				<artifactId>byte-buddy</artifactId>
				<version>${byte-buddy.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<dependency>
				<groupId>opensymphony</groupId>
				<artifactId>sitemesh</artifactId>
				<version>${sitemesh.version}</version>
			</dependency>
			<!-- Embedded Mongo , Redis for integration tests only -->
			<dependency>
				<groupId>de.flapdoodle.embed</groupId>
				<artifactId>de.flapdoodle.embed.mongo</artifactId>
				<version>${embed-mongo.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>redis.embedded</groupId>
				<artifactId>embedded-redis</artifactId>
				<version>${embed-redis.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- <dependency> <groupId>org.apache.qpid</groupId> <artifactId>qpid-broker</artifactId>
				<version>${qpid-broker.version}</version> <scope>test</scope> </dependency> -->
			<!-- <dependency> <groupId>org.springframework.amqp</groupId> <artifactId>spring-rabbit</artifactId>
				<version>${spring-rabbit.version}</version> <scope>test</scope> </dependency> -->
		</dependencies>
	</dependencyManagement>
	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/application*.yml</include>
					<include>**/application*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application*.yml</exclude>
					<exclude>**/application*.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<!-- Plugin management for anthem's nimbus packaging specfic plugins -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${mojo-exec-plugin.version}</version>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.maven.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>${frontend.plugin.version}</version>
					<executions>
						<execution>
							<id>install node and npm</id>
							<goals>
								<goal>install-node-and-npm</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<nodeVersion>${node.version}</nodeVersion>
								<npmVersion>${npm.version}</npmVersion>
							</configuration>
						</execution>
						<execution>
							<id>npm cache clean</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<arguments>cache clean --force</arguments>
							</configuration>
						</execution>
						<execution>
							<id>npm config set registry</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>config set registry https://registry.npmjs.org/</arguments>
							</configuration>
							<phase>generate-resources</phase>
						</execution>
						<execution>
							<id>npm config turn off ssl</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>config set strict-ssl false</arguments>
							</configuration>
							<phase>generate-resources</phase>
						</execution>
<!-- 						<execution>
							<id>npm rebuild sass</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>rebuild node-sass</arguments>
							</configuration>
							<phase>generate-resources</phase>
						</execution> -->
						<execution>
							<id>npm install dev</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>install</arguments>
							</configuration>
							<phase>generate-resources</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<!-- Plugins which will get executed on each project -->
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<configuration>
					<!-- <destFile>${basedir}/target/jacoco.exec</destFile> -->
					<!-- <dataFile>${basedir}/target/jacoco.exec</dataFile> -->
					<destFile>${sonar.jacoco.reportPath}</destFile>
					<dataFile>${sonar.jacoco.reportPath}</dataFile>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-rules</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[1.8,)</version>
								</requireJavaVersion>
								<requireProperty>
									<property>main.basedir</property>
								</requireProperty>
								<requireProperty>
									<property>project.organization.name</property>
								</requireProperty>
								<requireProperty>
									<property>project.name</property>
								</requireProperty>
								<requireProperty>
									<property>project.description</property>
								</requireProperty>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<repositories>
				<repository>
					<id>spring-snapshots</id>
					<name>Spring Snapshots</name>
					<url>https://repo.spring.io/snapshot</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
				<repository>
					<id>spring-milestones</id>
					<name>Spring Milestones</name>
					<url>https://repo.spring.io/milestone</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
				<repository>
					<id>spring-libs-milestones</id>
					<name>Spring Milestones</name>
					<url>http://repo.spring.io/libs-milestone</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>spring-snapshots</id>
					<name>Spring Snapshots</name>
					<url>https://repo.spring.io/snapshot</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</pluginRepository>
				<pluginRepository>
					<id>spring-milestones</id>
					<name>Spring Milestones</name>
					<url>https://repo.spring.io/milestone</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<id>snapshot</id>
		</profile>
		<profile>
			<id>milestone</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-milestone-rules</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireJavaVersion>
											<version>1.8</version>
										</requireJavaVersion>
										<requireReleaseDeps />
										<requireReleaseVersion />
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-release-rules</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireJavaVersion>
											<version>1.8</version>
										</requireJavaVersion>
										<requireReleaseDeps />
										<requireReleaseVersion />
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
